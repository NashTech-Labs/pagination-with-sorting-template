{"ast":null,"code":"var _jsxFileName = \"/home/nitin/techhub-template/custom-paginated-table/src/common/pagination/pagination.js\";\nimport React, { Component } from \"react\";\nimport { PropTypes } from 'prop-types';\nimport \"../pagination/pagination.scss\";\nconst defaultProps = {\n  initialPage: 1,\n  pageSize: 5\n};\n\nclass PaginationComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setPage = page => {\n      let items = this.props.items;\n      let pager = this.state.pager;\n\n      if (page < 1 || page > pager.totalPages) {\n        return;\n      }\n\n      pager = this.getPager(items.length, page);\n      let pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\n      this.setState({\n        pager: pager\n      });\n      return this.props.onChangePage(pageOfItems);\n    };\n\n    this.getPager = (totalItems, currentPage, pageSize) => {\n      currentPage = currentPage || 1; //Configure your page size here.\n\n      pageSize = pageSize || 5;\n      let totalPages = Math.ceil(totalItems / pageSize);\n      let startPage, endPage;\n\n      if (totalPages <= 10) {\n        startPage = 1;\n        endPage = totalPages;\n      } else {\n        if (currentPage <= 6) {\n          startPage = 1;\n          endPage = 10;\n        } else if (currentPage + 4 >= totalPages) {\n          startPage = totalPages - 9;\n          endPage = totalPages;\n        } else {\n          startPage = currentPage - 5;\n          endPage = currentPage + 4;\n        }\n      }\n\n      let startIndex = (currentPage - 1) * pageSize;\n      let endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n      let pages = [...Array(endPage + 1 - startPage).keys()].map(i => startPage + i);\n      return {\n        totalItems: totalItems,\n        currentPage: currentPage,\n        pageSize: pageSize,\n        totalPages: totalPages,\n        startPage: startPage,\n        endPage: endPage,\n        startIndex: startIndex,\n        endIndex: endIndex,\n        pages: pages\n      };\n    };\n\n    this.state = {\n      pager: {}\n    };\n  }\n\n  componentDidMount() {\n    this.props.items && this.props.items.length && this.setPage(this.props.initialPage);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.props.items !== prevProps.items && this.setPage(this.props.initialPage);\n  }\n\n  render() {\n    let pager = this.state.pager;\n\n    if (!pager.pages || pager.pages.length <= 1) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"nav\", {\n      \"aria-label\": \"...\",\n      className: \"align-items-right mt-3 mr-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"pagination justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: pager.currentPage === 1 ? 'page-item disabled' : 'page-item',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"page-link\",\n      onClick: () => this.setPage(pager.currentPage - 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 29\n      }\n    }, \"\\xAB\"))), pager.pages.map((page, index) => /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      className: pager.currentPage === page ? 'page-item  active' : 'page-item',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"page-link\",\n      onClick: () => this.setPage(page),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 29\n      }\n    }, page))), /*#__PURE__*/React.createElement(\"li\", {\n      className: pager.currentPage === pager.totalPages ? 'page-item  disabled' : 'page-item',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"page-link\",\n      onClick: () => this.setPage(pager.currentPage + 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 29\n      }\n    }, \"\\xBB\")))));\n  }\n\n}\n\nPaginationComponent.propTypes = {\n  items: PropTypes.array.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  initialPage: PropTypes.number\n};\nPaginationComponent.defaultProps = defaultProps;\nexport default PaginationComponent;","map":{"version":3,"sources":["/home/nitin/techhub-template/custom-paginated-table/src/common/pagination/pagination.js"],"names":["React","Component","PropTypes","defaultProps","initialPage","pageSize","PaginationComponent","constructor","props","setPage","page","items","pager","state","totalPages","getPager","length","pageOfItems","slice","startIndex","endIndex","setState","onChangePage","totalItems","currentPage","Math","ceil","startPage","endPage","min","pages","Array","keys","map","i","componentDidMount","componentDidUpdate","prevProps","prevState","render","index","propTypes","array","isRequired","func","number"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { PropTypes } from 'prop-types';\nimport \"../pagination/pagination.scss\";\n\nconst defaultProps = {\n    initialPage: 1,\n    pageSize: 5\n}\n\nclass PaginationComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { pager: {} };\n    }\n\n    componentDidMount() {\n        (this.props.items && this.props.items.length) && this.setPage(this.props.initialPage);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        (this.props.items !== prevProps.items) && this.setPage(this.props.initialPage);\n    }\n\n    setPage = (page) => {\n        let items = this.props.items;\n        let pager = this.state.pager;\n\n        if (page < 1 || page > pager.totalPages) {\n            return;\n        }\n\n        pager = this.getPager(items.length, page);\n\n        let pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\n        this.setState({ pager: pager });\n\n        return this.props.onChangePage(pageOfItems);\n    }\n\n    getPager = (totalItems, currentPage, pageSize) => {\n        currentPage = currentPage || 1;\n        //Configure your page size here.\n        pageSize = pageSize || 5;\n        let totalPages = Math.ceil(totalItems / pageSize);\n\n        let startPage, endPage;\n        if (totalPages <= 10) {\n            startPage = 1;\n            endPage = totalPages;\n        } else {\n            if (currentPage <= 6) {\n                startPage = 1;\n                endPage = 10;\n            } else if (currentPage + 4 >= totalPages) {\n                startPage = totalPages - 9;\n                endPage = totalPages;\n            } else {\n                startPage = currentPage - 5;\n                endPage = currentPage + 4;\n            }\n        }\n\n        let startIndex = (currentPage - 1) * pageSize;\n        let endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n\n        let pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\n\n        return {\n            totalItems: totalItems,\n            currentPage: currentPage,\n            pageSize: pageSize,\n            totalPages: totalPages,\n            startPage: startPage,\n            endPage: endPage,\n            startIndex: startIndex,\n            endIndex: endIndex,\n            pages: pages\n        };\n    }\n\n    render() {\n        let pager = this.state.pager;\n        if (!pager.pages || pager.pages.length <= 1) {\n            return null;\n        }\n\n        return (\n            <nav aria-label=\"...\" className=\"align-items-right mt-3 mr-3\">\n                <ul className=\"pagination justify-content-end\">\n                    <li className={pager.currentPage === 1 ? 'page-item disabled' : 'page-item'}>\n                        {/* eslint-disable-next-line */}\n                        <a className=\"page-link\" onClick={() => this.setPage(pager.currentPage - 1)}>\n                            <span aria-hidden=\"true\">&laquo;</span></a>\n                    </li>\n                    {pager.pages.map((page, index) =>\n                        <li key={index} className={pager.currentPage === page ? 'page-item  active' : 'page-item'}>\n                            {/* eslint-disable-next-line */}\n                            <a className=\"page-link\" onClick={() => this.setPage(page)}>{page}</a>\n                        </li>\n                    )}\n                    <li className={pager.currentPage === pager.totalPages ? 'page-item  disabled' : 'page-item'}>\n                        {/* eslint-disable-next-line */}\n                        <a className=\"page-link\" onClick={() => this.setPage(pager.currentPage + 1)}>\n                            <span aria-hidden=\"true\">&raquo;</span></a>\n                    </li>\n                </ul>\n            </nav>\n        );\n    }\n}\n\nPaginationComponent.propTypes = {\n    items: PropTypes.array.isRequired,\n    onChangePage: PropTypes.func.isRequired,\n    initialPage: PropTypes.number\n};\n\nPaginationComponent.defaultProps = defaultProps;\n\nexport default PaginationComponent;\n"]},"metadata":{},"sourceType":"module"}